p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() , axis.title.y = element_blank()) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning")) , hjust = 0)
png("tidytuesday_0501.png",600,500)
p
dev.off()
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() , axis.title.y = element_blank()) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() , legend.position = c(0.8,0.5)) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() , legend.position = c(0.9,0.3)) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning")) , hjust = 0)
p
?theme
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() , legend.position = c(1,0)) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() , legend.position = c("bottom","right")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,0) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,0) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) , labels = c(50,0,50,100)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0) +
scale_x_continuous(expand = c(.1, .1))
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) ,
labels = c(50,0,50,100) , expand = c(.1, .1)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0) +
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) ,
labels = c(50,0,50,100) , expand = c(.1, .1)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) ,
labels = c(50,0,50,100) , expand = c(0, .2)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) ,
labels = c(50,0,50,100) , expand = c(.2, .2)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) ,
labels = c(50,0,50,100) , expand = c(.12, .12)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
?scale_x_continuous
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) ,
labels = c(50,0,50,100) , expand = c(0, .12)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) ,
labels = c(50,0,50,100) , expand = c(0.1, 0)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
p <- ggplot(acs_max) +
geom_segment(aes(x = Income_first , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color = Black_first) , size = 2) +
geom_segment(aes(x = (-1) * IncomePerCap_last , xend = 0 , y = 1:nrow(acs_max) , yend = 1:nrow(acs_max),
color =  Black_last), size = 2) +
geom_point(aes(x = Income_first ,  y = 1:nrow(acs_max))) +
geom_point(aes(x = (-1) * IncomePerCap_last ,  y = 1:nrow(acs_max) )) +
scale_colour_gradient2(low = "blue",mid="grey",high = "red" ,name="Percent black",midpoint=12.3) +
theme_classic() +
theme(axis.ticks.y = element_blank() , axis.text.y = element_blank() ,
axis.title.y = element_blank() ,
legend.position = c(1,.01) , legend.justification = c("right","bottom")) +
ggtitle("Income of highest- and lowest- earning counties per state") +
scale_x_continuous("Household Income (K USD)", breaks = c(-50000,0,50000,100000) ,
labels = c(50,0,50,100) , expand = c(0.15, 0)) +
geom_vline(xintercept = 0)+
geom_text(aes(x = Income_first+3000 , y = seq(1,nrow(acs_max),1) , label = State) ,
size= 3 ,hjust = 0) +
geom_text(aes(x = -3000 , y = 54 , label = c("Lowest earning county")) , hjust = 1) +
geom_text(aes(x = 3000 , y = 54 , label = c("Highest earning county")) , hjust = 0)
p
library(updateR)
library(updater)
install.packages("updateR")
library(installr)
install.packages("installr")
library(xlsx)
setwd("~/Documents/tidy_tuesday")
horton = read.csv("timhorton.csv" , stringsAsFactors = F)
starbucks = read.csv("starbucks.csv" , stringsAsFactors = F)
dunkin = read.csv("dunkin.csv" , stringsAsFactors = F)
names(horton)
names(starbucks)
names(dunkin)
acs = read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/acs2015_county_data.csv",
stringsAsFactors = F)
library(dplyr)
library(ggplot2)
full_join(horton,dunkin)
names(horton)
head(horton)
?summarize
?group_by
dunkin_zip = group_by(dunkin , e_postal)
dunkin_zip
head(dunkin_zip)
(dunkin_zip[1:10,])
(dunkin_zip[1:2,])
dunkin_zip = group_by(dunkin , "e_postal")
dunkin_zip
names(starbucks)
dunkin_zip = group_by(dunkin , "e_postal")
starbucks_zip = group_by(starbucks , "postal_code")
horton_zip = group_by(horton , "e_postal")
horton_zip
starbucks_zip
names(dunkin)
unique(dunkin$e_country)
starbucks$country
unique(starbucks$country)
dunkin_zip = group_by(filter(dunkin , e_country == "USA") , "e_postal")
starbucks_zip = group_by(filter(starbucks , country == "us") , "postal_code")
horton_zip = group_by(filter(horton , e_country == "USA") , "e_postal")
horton_zip
summarize(dunkin_zip , mean(e_postal))
?summarize
summarize(dunkin_zip , mean())
summarize(dunkin , mean(e_postal))
dunkin_count = summaryize(dunkin_zip , count = n())
dunkin_count = summarize(dunkin_zip , count = n())
dunkin_count
dunkin_zip = group_by(filter(dunkin , e_country == "USA") , e_postal)
dunkin_zip
dunkin_count = summarize(dunkin_zip , count = n())
dunkin_count
dunkin_zip = group_by(filter(dunkin , e_country == "USA") , e_postal)
starbucks_zip = group_by(filter(starbucks , country == "us") , postal_code)
horton_zip = group_by(filter(horton , e_country == "USA") , e_postal)
dunkin_count = summarize(dunkin_zip , count = n())
dunkin_count
dunkin_count = summarize(dunkin_zip , count = n())
starbucks_count = summarize(starbucks_zip , count = n())
horton_count = summarize(horton_zip , count = n())
dunkin_count
names(acs)
names(starbucks)
all_count = full_join(dunkin_count , horton_count , e_postal)
names(dunkin_count)
all_count = full_join(dunkin_count , horton_count , "e_postal")
all_count
?full_join
dunkin_count = summarize(dunkin_zip , dunkin = n())
starbucks_count = summarize(starbucks_zip , starbucks = n())
horton_count = summarize(horton_zip , horton = n())
all_count = full_join(dunkin_count , horton_count , "e_postal")
all_count = full_join(all_count , starbucks_count , c("e_postal","postal_code"))
all_count
all_count = full_join(all_count , starbucks_count , c("e_postal"="postal_code"))
str(starbucks)
?mutate
starbucks_zip = mutate(starbucks_zip , postal_code = as.numeric(postal_code))
starbucks_zip = group_by(mutate(
filter(starbucks , country == "us"),
postal_code = as.numeric(postal_code)) , postal_code)
starbucks_zip = group_by(
mutate(filter(starbucks , country == "us"),
postal_code = as.numeric(postal_code)) , postal_code)
horton_zip = group_by(filter(horton , e_country == "USA") , e_postal)
dunkin_count = summarize(dunkin_zip , dunkin = n())
starbucks_count = summarize(starbucks_zip , starbucks = n())
horton_count = summarize(horton_zip , horton = n())
all_count = full_join(dunkin_count , horton_count , "e_postal")
all_count = full_join(all_count , starbucks_count , c("e_postal"="postal_code"))
all_count
dunkin_zip
dunkin_zip$e_postal
dunkin$e_postal
tail(all_count)
plot(all_count$dunkin , all_count$starbucks)
plot(all_count[-1,])
plot(all_count[-1:2,])
plot(all_count[-c(1:2),])
plot(all_count[,])
acs = read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/acs2015_county_data.csv",
stringsAsFactors = F)
dunkin_state = group_by(filter(dunkin , e_country == "USA") , e_state)
starbucks_state = group_by(filter(starbucks , country == "us") , state)
horton_state = group_by(filter(horton , e_country == "USA") , e_state)
dunkin_state
dunkin$e_state
starbuks$state
starbucks$state
starbucks$state[starbucks$country=="us",]
starbucks$state[starbucks$country=="us"]
horton$e_state
dunkin_count = summarize(dunkin_state , dunkin = n())
starbucks_count = summarize(starbucks_state , starbucks = n())
horton_count = summarize(horton_state , horton = n())
all_count = full_join(dunkin_count , horton_count , "e_state")
all_count = full_join(all_count , starbucks_count , c("e_state"="state"))
all_count
nrow(all_count)
starbucks$state
unique(starbucks$state)
nrow(starbucks)
library(tidyverse)
sw <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/star-wars-survey/StarWars.csv",
header = F , stringsAsFactors = F)
#csv did not read with header b/c of question marks
#get questions and remove from dataset
questions <- as.character(sw[1,])
sw = sw[-c(1:2),]
install.packages("tidyverse")
package_version("Rstan")
package_version("rstan")
packageVersion("rstan")
.libPaths()
install.packages("tidyverse")
sw <- read.csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/star-wars-survey/StarWars.csv",
header = F , stringsAsFactors = F)
#csv did not read with header b/c of question marks
#get questions and remove from dataset
questions <- as.character(sw[1,])
sw = sw[-c(1:2),]
#separate out multiple-choice questions
filmsSeen <- select(sw , c(1,4:9))
library(tidyverse)
install.packages("tidyverse")
