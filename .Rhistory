filmsSeen
#separate out multiple-choice questions
filmsSeen <- select(sw , 4:9)
colnames(filmsSeen) <- apply(filmsSeen , 2 , function(x) unique(x[x!=""]))
filmsSeen
install.packages(c("ape", "geiger", "phytools", "picante", "mvtnorm",  "brms"))
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
MAKEVARS <- file.path(dotR, "Makevars")
if (!file.exists(MAKEVARS)) file.create(MAKEVARS)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256"
file = MAKEVARS,
sep = "\n",
append = TRUE
)
# print the contents to the console
cat(readLines(MAKEVARS), sep = "\n")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
MAKEVARS <- file.path(dotR, "Makevars")
if (!file.exists(MAKEVARS)) file.create(MAKEVARS)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256"
file = MAKEVARS,
sep = "\n",
append = TRUE
)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = MAKEVARS,
sep = "\n",
append = TRUE
)
MAKEVARS
file.path(Sys.getenv("HOME"), ".R")
dir.create(dotR)
?dir.exists(dotR)
dir.exists(dotR)
MAKEVARS
file.exists(MAKEVARS)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = MAKEVARS,
sep = "\n",
append = TRUE
)
?cat
MAKEVARS
dir(MAKEVARS)
dir(MAKEVARS../)
dir("/Users/claire/")
dir("/Users/claire/.R")
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = "/Users/claire/.R/Makevars",
sep = "\n",
append = TRUE
)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256"
file = MAKEVARS,
sep = "\n",
append = TRUE
)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
#file = MAKEVARS,
sep = "\n",
append = TRUE
)
getwd()
?file.create
file.remove(Makevars)
file.remove(MAKEVARS)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = MAKEVARS,
sep = "\n",
append = TRUE
)
file.exists(MAKEVARS)
if (!file.exists(MAKEVARS)) file.create(MAKEVARS)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = MAKEVARS,
sep = "\n",
append = TRUE
)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
MAKEVARS <- file.path(dotR, "Makevars")
if (!file.exists(MAKEVARS)) file.create(MAKEVARS)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
MAKEVARS <- file.path(dotR, "Makevars")
if (!file.exists(MAKEVARS)) file.create(MAKEVARS)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = MAKEVARS,
sep = "\n",
append = TRUE
)
# print the contents to the console
cat(readLines(MAKEVARS), sep = "\n")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
install.packages("rstan", type = "source")
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("reprex")
install.packages("tidyverse")
library(tidyverse)
setwd("~/Documents/tidy_tuesday")
library(tidyverse)
library(lubridate)
library(RColorBrewer)
bikeRaw <- read_csv("week10_biketown.csv")
#http://w2.weather.gov/climate/local_data.php?wfo=pqr
weather <- read_csv("Portland_dailyclimatedata.csv" , skip = 6)
bike <- mutate(bikeRaw , bearing = atan((EndLongitude-StartLongitude)/(EndLatitude-StartLatitude)),
StartDate = mdy(StartDate ))
bike <- mutate(bike , dow = wday(StartDate , label = T),
durMins = minute(Duration),
monthYear = format(as.Date(StartDate), "%Y-%m"))
bikeDates <- group_by(bike , StartDate)
dateSummary <- summarize(bikeDates ,
StartTime = mean(StartTime , na.rm = T) ,
Distance = mean(Distance_Miles , na.rm = T),
count = n(),
Duration = median(Duration , na.rm = T))
dateSummary <- mutate(dateSummary , Duration = as.numeric(Duration)/60)
precip <- filter(weather , X3 == "PR")
weatherLong <- gather(precip , key = "day" , value = "precip" , "1":"31")
weatherLong <- filter(weatherLong ,
YR %in% c(2016:2018))
weatherLong <- mutate(weatherLong , date = ymd(str_c(YR,MO,day,sep="-")),
precip = as.numeric(precip))
dateSummary <- left_join(dateSummary , weatherLong , c("StartDate" = "date"))
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
axis.text.y.right = element_text(color = rgb(.2,.3,1)),
axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1])) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
geom_line()+
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
geom_line(color = "lightgrey")+
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
geom_line(color = "grey")+
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
geom_line(color = rgb(0,0,0,.8))+
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
geom_line(aes(x = StartDate , y = precip*100 + 3000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
geom_line(aes(x = StartDate , y = precip*1000 + 3000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
geom_col(color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
p
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
geom_col(color = rgb(.2,.3,1))
p2
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
geom_line(color = rgb(.2,.3,1))
p2
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
#geom_line(y=0) +
p
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
# geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
geom_col( color = rgb(.2,.3,1)) +
theme_classic(base_size = 14)
p
p2
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
geom_col( color = rgb(.2,.3,1)) +
theme_classic(base_size = 14) +
ylab("Daily precipitation (in)")
p2
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
geom_col( color = rgb(.2,.3,1)) +
theme_classic(base_size = 14) +
ylab("Daily precipitation (in)") + xlab("Date")+
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y")
p2
grid.arrange(p,p2)
??grid.arrange
library(gridExtra)
grid.arrange(p,p2)
grid.arrange(p,p2,nrow = 2)
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
# geom_line(y=0) +
theme(legend.position = c(0.05,1) , legend.justification = c("left","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
#legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
geom_col( color = rgb(.2,.3,1)) +
theme_classic(base_size = 14) +
ylab("Daily precipitation (in)") + xlab("Date")+
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y")
grid.arrange(p,p2,nrow = 2)
p <- ggplot(dateSummary , aes(x = StartDate , y = count)) +
geom_col(aes(fill = Duration)) +
theme_classic(base_size = 14) +
scale_fill_gradient2("Median ride time (mins)",low =  brewer.pal(8,"PiYG")[8], mid = brewer.pal(8,"PiYG")[4],high = brewer.pal(11,"PiYG")[1],
midpoint = 15) +
ylab("Number of rides (per day)") + xlab("Date") +
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y") +
# geom_col(aes(x = StartDate , y = -1 * precip*1000) , color = rgb(.2,.3,1)) +
# scale_y_continuous(breaks = seq(0,3000,1000),
#   sec.axis = sec_axis(~ . / (-1000) ,name = "Precipitation (in)",
#          breaks = seq(0,2.2,.5)))+
# geom_line(y=0) +
theme(legend.position = c(0.95,0.95) , legend.justification = c("right","top") ,
legend.direction = "horizontal" , legend.title=element_text(size=10),
legend.text=element_text(size=8),
plot.title = element_text(hjust = 0.5,size = 20,face="bold"),
#legend.box.background = element_rect(color = "black"),
#axis.text.y = element_text(color = brewer.pal(8,"PiYG")[1]),
axis.text.y.right = element_text(color = rgb(.2,.3,1))) +
ggtitle("Bike when it's dry!")
p2 <- ggplot(dateSummary , aes(StartDate , y = precip))+
geom_col( color = rgb(.2,.3,1)) +
theme_classic(base_size = 14) +
ylab("Daily precipitation (in)") + xlab("Date")+
scale_x_date(date_breaks = "3 month", date_labels =  "%b %Y")
grid.arrange(p,p2,nrow = 2)
